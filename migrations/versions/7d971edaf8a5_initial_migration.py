"""Initial migration

Revision ID: 7d971edaf8a5
Revises: 
Create Date: 2025-07-22 19:35:35.562505

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d971edaf8a5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'PAYMENT_ADMIN', 'WORKER', name='adminrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('customers',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('total_debt', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery_locations',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('delivery_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('estimated_time', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('PRODUCT', 'SERVICE', name='producttype'), nullable=False),
    sa.Column('base_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dashboard_notes',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['admin_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('reference', sa.String(length=20), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('assigned_to', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('delivery_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fulfillment_type', sa.Enum('PICKUP', 'DELIVERY', name='fulfillmenttype'), nullable=False),
    sa.Column('delivery_location_id', sa.UUID(), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('estimated_completion', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['delivery_location_id'], ['delivery_locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference')
    )
    op.create_table('quote_requests',
    sa.Column('reference', sa.String(length=20), nullable=False),
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=False),
    sa.Column('customer_email', sa.String(length=120), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('contact_method', sa.Enum('WHATSAPP', 'PHONE', 'EMAIL', 'WEBSITE_UPLOAD', name='contactmethod'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'QUOTED', 'ACCEPTED', 'REJECTED', 'COMPLETED', name='quotestatus'), nullable=False),
    sa.Column('quoted_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('quoted_by', sa.UUID(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quoted_by'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference')
    )
    op.create_table('design_files',
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('cloudinary_url', sa.String(length=500), nullable=False),
    sa.Column('cloudinary_public_id', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('customization_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('MPESA_STK_PUSH', 'MPESA_PAYBILL', 'CASH', name='paymentmethod'), nullable=False),
    sa.Column('mpesa_transaction_id', sa.String(length=50), nullable=True),
    sa.Column('paybill_reference', sa.String(length=50), nullable=True),
    sa.Column('paybill_confirmation_code', sa.String(length=20), nullable=True),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'AWAITING_CONFIRMATION', name='paymentstatus'), nullable=False),
    sa.Column('recorded_by', sa.UUID(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['recorded_by'], ['admin_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quote_files',
    sa.Column('quote_request_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('cloudinary_url', sa.String(length=500), nullable=False),
    sa.Column('cloudinary_public_id', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('uploaded_by', sa.Enum('CUSTOMER', 'ADMIN', name='fileuploadedby'), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quote_request_id'], ['quote_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('product')
    op.drop_table('quote_item')
    op.drop_table('quote_request')
    op.drop_table('payment')
    op.drop_table('category')
    op.drop_table('order')
    op.drop_table('order_status')
    op.drop_table('quote')
    op.drop_table('product_option')
    op.drop_table('quote_file')
    op.drop_table('delivery')
    op.drop_table('product_image')
    op.drop_table('product_option_value')
    op.drop_table('order_item')
    op.drop_table('order_file')
    with op.batch_alter_table('production_job', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('production_job_assigned_to_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('production_job_order_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('production_job_order_item_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'admin_users', ['assigned_to'], ['id'])
        batch_op.create_foreign_key(None, 'orders', ['order_id'], ['id'])
        batch_op.create_foreign_key(None, 'order_items', ['order_item_id'], ['id'])

    with op.batch_alter_table('production_step', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('production_step_assigned_to_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'admin_users', ['assigned_to'], ['id'])

    with op.batch_alter_table('service', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.drop_constraint(batch_op.f('service_category_id_fkey'), type_='foreignkey')
        batch_op.drop_column('category_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('service_category_id_fkey'), 'category', ['category_id'], ['id'])
        batch_op.drop_column('category')

    with op.batch_alter_table('production_step', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('production_step_assigned_to_fkey'), 'user', ['assigned_to'], ['id'])

    with op.batch_alter_table('production_job', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('production_job_order_item_id_fkey'), 'order_item', ['order_item_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('production_job_order_id_fkey'), 'order', ['order_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('production_job_assigned_to_fkey'), 'user', ['assigned_to'], ['id'])

    op.create_table('order_file',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_item.id'], name=op.f('order_file_order_item_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_file_pkey'))
    )
    op.create_table('order_item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('options_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name=op.f('order_item_order_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('order_item_product_id_fkey')),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], name=op.f('order_item_service_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_item_pkey'))
    )
    op.create_table('product_option_value',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('option_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('price_adjustment', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('price_adjustment_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['option_id'], ['product_option.id'], name=op.f('product_option_value_option_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_option_value_pkey'))
    )
    op.create_table('product_image',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_primary', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('product_image_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_image_pkey'))
    )
    op.create_table('delivery',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tracking_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('carrier', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('estimated_delivery', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('actual_delivery', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name=op.f('delivery_order_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('delivery_pkey'))
    )
    op.create_table('quote_file',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('quote_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quote_request_id'], ['quote_request.id'], name=op.f('quote_file_quote_request_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('quote_file_pkey'))
    )
    op.create_table('product_option',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('product_option_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_option_pkey'))
    )
    op.create_table('quote',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('quote_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('quote_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('valid_until', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('terms_and_conditions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], name='quote_admin_id_fkey'),
    sa.ForeignKeyConstraint(['quote_request_id'], ['quote_request.id'], name='quote_quote_request_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quote_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('order_status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name=op.f('order_status_order_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_status_pkey'))
    )
    op.create_table('order',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('order_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quote_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('payment_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], name='order_address_id_fkey'),
    sa.ForeignKeyConstraint(['quote_id'], ['quote.id'], name='order_quote_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='order_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='category_pkey'),
    sa.UniqueConstraint('slug', name='category_slug_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('payment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('provider_response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name=op.f('payment_order_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('payment_pkey'))
    )
    op.create_table('quote_request',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('quote_request_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('desired_completion_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('budget', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('contact_preference', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('admin_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], name='quote_request_service_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='quote_request_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quote_request_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('quote_item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('quote_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quote_id'], ['quote.id'], name=op.f('quote_item_quote_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('quote_item_pkey'))
    )
    op.create_table('product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sku', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pricing_model', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('base_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('min_order_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('product_category_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_pkey')),
    sa.UniqueConstraint('sku', name=op.f('product_sku_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('quote_files')
    op.drop_table('payments')
    op.drop_table('order_items')
    op.drop_table('design_files')
    op.drop_table('quote_requests')
    op.drop_table('orders')
    op.drop_table('dashboard_notes')
    op.drop_table('products')
    op.drop_table('delivery_locations')
    op.drop_table('customers')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
