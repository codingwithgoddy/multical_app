name: Customer Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'customer-frontend/**'
      - '.github/workflows/customer-frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'customer-frontend/**'
      - '.github/workflows/customer-frontend-ci.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly for security scans

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper SonarCloud analysis
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: customer-frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./customer-frontend
      run: npm ci
    
    - name: Lint with ESLint
      working-directory: ./customer-frontend
      run: npm run lint
    
    - name: Type check with TypeScript
      working-directory: ./customer-frontend
      run: npm run type-check
    
    - name: Run tests
      working-directory: ./customer-frontend
      run: npm run test -- --coverage --watchAll=false
    
    - name: Security audit
      working-directory: ./customer-frontend
      run: npm audit --json > npm-audit-results.json || true
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --json-file-output=customer-frontend/snyk-results.json
        command: test
        
    - name: Build application
      working-directory: ./customer-frontend
      env:
        NEXT_PUBLIC_API_URL: http://localhost:5000/api/v1
      run: npm run build
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: customer-frontend-security-scan-results
        path: |
          customer-frontend/npm-audit-results.json
          customer-frontend/snyk-results.json
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./customer-frontend/coverage/lcov.info
        flags: customer-frontend
        name: customer-frontend-coverage
        
    - name: Upload coverage report for SonarCloud
      uses: actions/upload-artifact@v3
      with:
        name: customer-frontend-coverage-report
        path: ./customer-frontend/coverage/lcov.info
        
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: customer-frontend-coverage-report
          path: customer-frontend/coverage/
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: customer-frontend
          args: >
            -Dsonar.projectKey=multiprints_customer_frontend
            -Dsonar.organization=multiprints
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.test.js,src/**/*.test.jsx,src/**/*.test.ts,src/**/*.test.tsx
            -Dsonar.exclusions=src/**/*.test.js,src/**/*.test.jsx,src/**/*.test.ts,src/**/*.test.tsx,src/**/*.spec.js,src/**/*.spec.jsx,src/**/*.spec.ts,src/**/*.spec.tsx,src/**/__tests__/**