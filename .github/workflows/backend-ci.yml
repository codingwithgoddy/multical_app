name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly for security scans

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: multiprints_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper SonarCloud analysis
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black bandit safety
    
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      working-directory: ./backend
      run: black --check .
    
    - name: Run tests with pytest
      working-directory: ./backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/multiprints_test
        FLASK_ENV: testing
        SECRET_KEY: test-secret-key
        CLOUDINARY_CLOUD_NAME: test
        CLOUDINARY_API_KEY: test
        CLOUDINARY_API_SECRET: test
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term-missing
    
    - name: Security scan with bandit
      working-directory: ./backend
      run: bandit -r . -x ./tests -f json -o bandit-results.json || true
    
    - name: Check for dependency vulnerabilities
      working-directory: ./backend
      run: safety check -r requirements.txt --json > safety-results.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: |
          backend/bandit-results.json
          backend/safety-results.json
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
    
    - name: Upload coverage report for SonarCloud
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./backend/coverage.xml
        
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: backend/
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend
          args: >
            -Dsonar.projectKey=multiprints_backend
            -Dsonar.organization=multiprints
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=app
            -Dsonar.tests=tests